{
  "scope": "source.sas - variable.other.sas",

  "completions":
  [
  "sas",
  {"trigger": "_vdw_tumor", "contents": "_vdw_tumor"},
  {"trigger": "_vdw_enroll", "contents": "_vdw_enroll"},
  {"trigger": "_vdw_demographic", "contents": "_vdw_demographic"},
  {"trigger": "_vdw_language", "contents": "_vdw_language"},
  {"trigger": "_vdw_rx", "contents": "_vdw_rx"},
  {"trigger": "_vdw_everndc", "contents": "_vdw_everndc"},
  {"trigger": "_vdw_utilization", "contents": "_vdw_utilization"},
  {"trigger": "_vdw_dx", "contents": "_vdw_dx"},
  {"trigger": "_vdw_px", "contents": "_vdw_px"},
  {"trigger": "_vdw_provider_specialty", "contents": "_vdw_provider_specialty"},
  {"trigger": "_vdw_vitalsigns", "contents": "_vdw_vitalsigns"},
  {"trigger": "_vdw_census", "contents": "_vdw_census"},
  {"trigger": "_vdw_census_loc", "contents": "_vdw_census_loc"},
  {"trigger": "_vdw_census_demog", "contents": "_vdw_census_demog"},
  {"trigger": "_vdw_lab", "contents": "_vdw_lab"},
  {"trigger": "_vdw_lab_notes", "contents": "_vdw_lab_notes"},
  {"trigger": "_vdw_death", "contents": "_vdw_death"},
  {"trigger": "_vdw_cause_of_death", "contents": "_vdw_cause_of_death"},
  {"trigger": "_vdw_social_hx", "contents": "_vdw_social_hx"},
  {"trigger": "_vdw_facility", "contents": "_vdw_facility"},
  {"trigger": "_cesr_benefit_choice", "contents": "_cesr_benefit_choice"},
  {"trigger": "_cesr_benefit_choice_rx", "contents": "_cesr_benefit_choice_rx"},
  {"trigger": "_cesr_benefit_list", "contents": "_cesr_benefit_list"},
  {"trigger": "_cesr_benefit_member", "contents": "_cesr_benefit_member"},
  {"trigger": "_cesr_benefit_tier", "contents": "_cesr_benefit_tier"},
  {"trigger": "_cesr_bmd_frax_score", "contents": "_cesr_bmd_frax_score"},
  {"trigger": "_cesr_bmd_scan_results", "contents": "_cesr_bmd_scan_results"},
  {"trigger": "_cesr_exclusion", "contents": "_cesr_exclusion"},
  {"trigger": "_cesr_gems_pt_geog_desc", "contents": "_cesr_gems_pt_geog_desc"},
  {"trigger": "_cesr_gems_race_prob", "contents": "_cesr_gems_race_prob"},
  {"trigger": "_cesr_infusion_admin", "contents": "_cesr_infusion_admin"},
  {"trigger": "_cesr_infusion_ordd_dspd", "contents": "_cesr_infusion_ordd_dspd"},
  {"trigger": "_cesr_infusion_treatment", "contents": "_cesr_infusion_treatment"},
  {"trigger": "_cesr_order_med", "contents": "_cesr_order_med"},
  {"trigger": "_cesr_order_med_dx", "contents": "_cesr_order_med_dx"},
  {"trigger": "_cesr_order_med_lookup", "contents": "_cesr_order_med_lookup"},
  {"trigger": "_cesr_phr_activity", "contents": "_cesr_phr_activity"},
  {"trigger": "_cesr_pro_combined", "contents": "_cesr_pro_combined"},
  {"trigger": "_cesr_phr_messages", "contents": "_cesr_phr_messages"},
  {"trigger": "_cesr_phr_proxy", "contents": "_cesr_phr_proxy"},
  {"trigger": "_cesr_phr_registration", "contents": "_cesr_phr_registration"},
  {"trigger": "_cesr_phr_test", "contents": "_cesr_phr_test"},
  {"trigger": "_cesr_preg_mom_baby_link", "contents": "_cesr_preg_mom_baby_link"},
  {"trigger": "_cesr_preg_outcome", "contents": "_cesr_preg_outcome"},
  {"trigger": "_cesr_preg_outcome_voided_data", "contents": "_cesr_preg_outcome_voided_data"},
  {"trigger": "_cesr_pro_survey_responses", "contents": "_cesr_pro_survey_responses"},
  {"trigger": "_cesr_pro_surveys", "contents": "_cesr_pro_surveys"},
  {"trigger": "_cesr_pro_types", "contents": "_cesr_pro_types"},
  {"trigger": "_cesr_problemlist", "contents": "_cesr_problemlist"},
  {"trigger": "_cesr_rt_dx", "contents": "_cesr_rt_dx"},
  {"trigger": "_cesr_rt_field", "contents": "_cesr_rt_field"},
  {"trigger": "_cesr_rt_plan", "contents": "_cesr_rt_plan"},
  {"trigger": "_cesr_rt_presc", "contents": "_cesr_rt_presc"},
  {"trigger": "_cesr_rt_tx", "contents": "_cesr_rt_tx"},
  {"trigger": "_cesr_inhouse_pharmacy", "contents": "_cesr_inhouse_pharmacy"},
  {"trigger": "_rcm_cod", "contents": "_rcm_cod"},
  {"trigger": "_rcm_causetype", "contents": "_rcm_causetype"},
  {"trigger": "_rcm_deathtype", "contents": "_rcm_deathtype"},
  {"trigger": "_rcm_diagnosis", "contents": "_rcm_diagnosis"},
  {"trigger": "_rcm_discharge_status", "contents": "_rcm_discharge_status"},
  {"trigger": "_rcm_admit_source", "contents": "_rcm_admit_source"},
  {"trigger": "_rcm_enctype", "contents": "_rcm_enctype"},
  {"trigger": "_rcm_ethnicity", "contents": "_rcm_ethnicity"},
  {"trigger": "_rcm_gender", "contents": "_rcm_gender"},
  {"trigger": "_rcm_lab_loinc", "contents": "_rcm_lab_loinc"},
  {"trigger": "_rcm_physician_specialty", "contents": "_rcm_physician_specialty"},
  {"trigger": "_rcm_procedure", "contents": "_rcm_procedure"},
  {"trigger": "_rcm_race", "contents": "_rcm_race"},
  {"trigger": "_rcm_rx", "contents": "_rcm_rx"},
  {"trigger": "_rcm_pos", "contents": "_rcm_pos"},
  {"trigger": "_rcm_xwlk_diagnosis_std", "contents": "_rcm_xwlk_diagnosis_std"},
  {"trigger": "_xwlk_lab_ttandlnc", "contents": "_xwlk_lab_ttandlnc"},
  {"trigger": "_xwlk_lab_tt2cmpt", "contents": "_xwlk_lab_tt2cmpt"},
  {"trigger": "_xwlk_lab_cpt2cmpt", "contents": "_xwlk_lab_cpt2cmpt"},
  {"trigger": "_xwlk_lab_lnc2cmpt", "contents": "_xwlk_lab_lnc2cmpt"},
  {"trigger": "_xwlk_lab_tt2lnc2cmpt", "contents": "_xwlk_lab_tt2lnc2cmpt"},
  {"trigger": "_xwlk_lab_lnc_notin_clrty", "contents": "_xwlk_lab_lnc_notin_clrty"},
  {"trigger": "_xwlk_lab_vdw_cmpts", "contents": "_xwlk_lab_vdw_cmpts"},
  {"trigger": "_xwlk_lab_all_cmpts", "contents": "_xwlk_lab_all_cmpts"},
  {"trigger": "_rcm_list_icd9cm", "contents": "_rcm_list_icd9cm"},
  {"trigger": "_rcm_list_icd10cm", "contents": "_rcm_list_icd10cm"},
  {"trigger": "_cntr_year_encounters", "contents": "_cntr_year_encounters"},
  {"trigger": "_cntr_year_patients", "contents": "_cntr_year_patients"},
  {"trigger": "_cntr_dx_codes", "contents": "_cntr_dx_codes"},
  {"trigger": "_cntr_lab_codes", "contents": "_cntr_lab_codes"},
  {"trigger": "_cntr_px_codes", "contents": "_cntr_px_codes"},
  {"trigger": "_cntr_rx_codes", "contents": "_cntr_rx_codes"},
  {"trigger": "_rcm_vdw_codebucket", "contents": "_rcm_vdw_codebucket"},
  {"trigger": "_rcm_code_descriptions", "contents": "_rcm_code_descriptions"},
  {"trigger":"abs", "contents":"abs(${1:numeric})"},
  {"trigger":"addr", "contents":"addr(${1:variable})"},
  {"trigger":"addrlong", "contents":"addrlong(${1:variable})"},
  {"trigger":"airy", "contents":"airy(${1:numeric})"},
  {"trigger":"allcomb", "contents":"allcomb(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${n:variable-n})"},
  {"trigger":"allcomb2", "contents":"call allcomb(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${n:variable-n})"},
  {"trigger":"allcombi", "contents":"call allcombi(${1:N}, ${2:K}, ${3:index-1}, ${4:...}, ${5:index-K}, ${6:<, index-added, index-removed>})"},
  {"trigger":"allperm", "contents":"allperm(${1:count}, ${2:variable-1}, ${3:<, variable-2 ...>})"},
  {"trigger":"allperm2", "contents":"call allperm(${1:count}, ${2:variable-1}, ${3:<, variable-2 ...>})"},
  {"trigger":"anyalnum", "contents":"anyalnum(${1:string}, ${2:<, start>})"},
  {"trigger":"anyalpha", "contents":"anyalpha(${1:string}, ${2:<, start>})"},
  {"trigger":"anycntrl", "contents":"anycntrl(${1:string}, ${2:<, start>})"},
  {"trigger":"anydigit", "contents":"anydigit(${1:string}, ${2:<, start>})"},
  {"trigger":"anyfirst", "contents":"anyfirst(${1:string}, ${2:<, start>})"},
  {"trigger":"anygraph", "contents":"anygraph(${1:string}, ${2:<, start>})"},
  {"trigger":"anylower", "contents":"anylower(${1:string}, ${2:<, start>})"},
  {"trigger":"anyname", "contents":"anyname(${1:string}, ${2:<, start>})"},
  {"trigger":"anyprint", "contents":"anyprint(${1:string}, ${2:<, start>})"},
  {"trigger":"anypunct", "contents":"anypunct(${1:string}, ${2:<, start>})"},
  {"trigger":"anyspace", "contents":"anyspace(${1:string}, ${2:<, start>})"},
  {"trigger":"anyupper", "contents":"anyupper(${1:string}, ${2:<, start>})"},
  {"trigger":"anyxdigit", "contents":"anyxdigit(${1:string}, ${2:<, start>})"},
  {"trigger":"arcos", "contents":"arcos(${1:numeric})"},
  {"trigger":"arcosh", "contents":"arcosh(${1:numeric})"},
  {"trigger":"arsin", "contents":"arsin(${1:numeric})"},
  {"trigger":"arsinh", "contents":"arsinh(${1:numeric})"},
  {"trigger":"artanh", "contents":"artanh(${1:numeric})"},
  {"trigger":"atan", "contents":"atan(${1:numeric})"},
  {"trigger":"atan2", "contents":"atan2(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"attrc", "contents":"attrc(${1:data-set-id}, ${2:attr-name})"},
  {"trigger":"attrn", "contents":"attrn(${1:data-set-id}, ${2:attr-name})"},
  {"trigger":"band", "contents":"band(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"beta", "contents":"beta(${1:1st shape parama a}, ${2:2nd shape param b})"},
  {"trigger":"betainv", "contents":"betainv(${1:p}, ${2:1st shape param a}, ${3:2nd shape param b})"},
  {"trigger":"blackclprc", "contents":"blackclprc(${1:E}, ${2:t}, ${3:F}, ${4:r}, ${5:sigma})"},
  {"trigger":"blackptprc", "contents":"blackptprc(${1:E}, ${2:t}, ${3:F}, ${4:r}, ${5:sigma})"},
  {"trigger":"blkshclprc", "contents":"blkshclprc(${1:E}, ${2:t}, ${3:S}, ${4:r}, ${5:sigma})"},
  {"trigger":"blkshptprc", "contents":"blkshptprc(${1:E}, ${2:t}, ${3:S}, ${4:r}, ${5:sigma})"},
  {"trigger":"blshift", "contents":"blshift(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"bnot", "contents":"bnot(${1:numeric})"},
  {"trigger":"bor", "contents":"bor(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"brshift", "contents":"brshift(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"bxor", "contents":"bxor(${1:numeric-1}, ${2:numeric-2})"},
  {"trigger":"byte", "contents":"byte(${1:n})"},
  {"trigger":"cat", "contents":"cat(${1:item-1}, ${2:<, ..., item-n>})"},
  {"trigger":"catq", "contents":"catq(${1:modifiers}, ${2:<, delimiter>}, ${3:item-1}, ${4:<, ..., item-n>})"},
  {"trigger":"cats2", "contents":"call cats(${1:result}, ${2:<, item-1, ..., iterm-n>})"},
  {"trigger":"cats", "contents":"cats(${1:item-1}, ${2:<, ..., item-n>})"},
  {"trigger":"catt2", "contents":"call catt(${1:result}, ${2:<, item-1, ..., iterm-n>})"},
  {"trigger":"catt", "contents":"catt(${1:item-1}, ${2:<, ..., item-n>})"},
  {"trigger":"catx2", "contents":"call catx(${1:delimiter}, ${2:result}, ${3:<, item-1, ..., iterm-n>})"},
  {"trigger":"catx", "contents":"catx(${1:delimiter}, ${2:item-1}, ${3:<, ..., item-n>})"},
  {"trigger":"cdf", "contents":"cdf(${1:distribution}, ${2:quantile}, ${3:<, parm-1.., parm-k>})"},
  {"trigger":"ceil", "contents":"ceil(${1:argument})"},
  {"trigger":"ceilz", "contents":"ceilz(${1:argument})"},
  {"trigger":"cexist", "contents":"cexist(${1:entry}, ${2:<'U'>})"},
    {"trigger":"char", "contents":"char(${1:string}, ${2:position})"},
  {"trigger":"choosec", "contents":"choosec(${1:index-expression}, ${2:selection-1}, ${3:<, ..., selection-n>})"},
  {"trigger":"choosen", "contents":"choosen(${1:index-expression}, ${2:selection-1}, ${3:<, ..., selection-n>})"},
  {"trigger":"cinv", "contents":"cinv(${1:p}, ${2:df}, ${3:<, nc>})"},
  {"trigger":"close", "contents":"close(${1:data-set-id})"},
  {"trigger":"cmiss", "contents":"cmiss(${1:argument-1}, ${2:<, argument-2, ...>})"},
  {"trigger":"cnonct", "contents":"cnonct(${1:x}, ${2:df}, ${3:prob>})"},
  {"trigger":"coalesce", "contents":"coalesce(${1:argument-1}, ${2:<..., argument-n>})"},
  {"trigger":"coalescec", "contents":"coalescec(${1:argument-1}, ${2:<..., argument-n>})"},
  {"trigger":"comb", "contents":"comb(${1:n}, ${2:r})"},
  {"trigger":"compare", "contents":"compare(${1:string-1}, ${2:string-2}, ${3:<, modifiers>})"},
  {"trigger":"compbl", "contents":"compbl(${1:source})"},
  {"trigger":"compcost", "contents":"call compcost(${1:operation-1}, ${2:value-1}, ${3:<, operation-2, value-2 ...>})"},
  {"trigger":"compfuzz", "contents":"compfuzz(${1:value1}, ${2:value2}, ${3:<, fuzz<, scal>>})"},
  {"trigger":"compged", "contents":"compged(${1:string-1}, ${2:string-2}, ${3:<, cutoff>}, ${4:<, modifiers>})"},
  {"trigger":"complev", "contents":"complev(${1:string-1}, ${2:string-2}, ${3:<, cutoff>}, ${4:<, modifiers>})"},
  {"trigger":"compound", "contents":"compound(${1:a}, ${2:f}, ${3:r}, ${4:n})"},
  {"trigger":"compress", "contents":"compress(${1:<source>}, ${2:<, chars>}, ${3:<, modifiers>})"},
  {"trigger":"constant", "contents":"constant(${1:constant}, ${2:<, parameter>})"},
  {"trigger":"convx", "contents":"convx(${1:y}, ${2:f}, ${3:c(1)}, ${4:...}, ${5:c(k)})"},
  {"trigger":"convxp", "contents":"convxp(${1:A}, ${2:c}, ${3:n}, ${4:K}, ${5:k0)}, ${6:y})"},
  {"trigger":"cos", "contents":"cos(${1:argument})"},
  {"trigger":"cosh", "contents":"cosh(${1:argument})"},
  {"trigger":"count", "contents":"count(${1:string}, ${2:substring}, ${3:<, modifiers>})"},
  {"trigger":"countc", "contents":"countc(${1:string}, ${2:charlist}, ${3:<, modifiers>})"},
  {"trigger":"countw", "contents":"countw(${1:<string>}, ${2:<, char>}, ${3:<, modifiers>})"},
  {"trigger":"css", "contents":"css(${1:argument-1}, ${2:<, ...argument-n>})"},
  {"trigger":"cumipmt", "contents":"cumipmt(${1:rate}, ${2:number-of-periods}, ${3:principal-amount}, ${4:<start-period>}, ${5:<end-period>}, ${6:<type>})"},
  {"trigger":"curobs", "contents":"curobs(${1:data-set-id})"},
  {"trigger":"cv", "contents":"cv(${1:argument-1}, ${2:argument-2}, ${3:<, argument-n>})"},
  {"trigger":"daccdb", "contents":"daccdb(${1:p}, ${2:v}, ${3:y}, ${4:r})"},
  {"trigger":"daccdbsl", "contents":"daccdbsl(${1:p}, ${2:v}, ${3:y}, ${4:r})"},
  {"trigger":"daccsl", "contents":"daccsl(${1:p}, ${2:v}, ${3:y})"},
  {"trigger":"daccsyd", "contents":"daccsyd(${1:p}, ${2:v}, ${3:y})"},
  {"trigger":"dacctab", "contents":"dacctab(${1:p}, ${2:v}, ${3:t1}, ${4:...}, ${5:tn})"},
  {"trigger":"dairy", "contents":"dairy(${1:x})"},
  {"trigger":"datapart", "contents":"datapart(${1:datetime})"},
  {"trigger":"datdif", "contents":"datdif(${1:sdate}, ${2:edate}, ${3:basis})"},
  {"trigger":"date", "contents":"date($0)"},
  {"trigger":"datejul", "contents":"datejul(${1:julian-date})"},
  {"trigger":"datetime", "contents":"datetime($0)"},
  {"trigger":"day", "contents":"day(${1:date})"},
  {"trigger":"dclose", "contents":"dclose(${1:directory-id})"},
  {"trigger":"dcreate", "contents":"dcreate(${1:directory-name}, ${2:<, parent-directory>})"},
  {"trigger":"depdb", "contents":"depdb(${1:p}, ${2:v}, ${3:y})"},
  {"trigger":"depdbsl", "contents":"depdbsl(${1:p}, ${2:v}, ${3:y}, ${4:r})"},
  {"trigger":"depsl", "contents":"depsl(${1:p}, ${2:v}, ${3:y})"},
  {"trigger":"depsyd", "contents":"depsyd(${1:p}, ${2:v}, ${3:y})"},
  {"trigger":"deptab", "contents":"deptab(${1:p}, ${2:v}, ${3:t1}, ${4:...}, ${5:tn})"},
  {"trigger":"dequote", "contents":"dequote(${1:string})"},
  {"trigger":"deviance", "contents":"deviance(${1:distribution}, ${2:variable}, ${3:shape-parameters}, ${4:<, epsilon>})"},
  {"trigger":"dhms", "contents":"dhms(${1:date}, ${2:hour}, ${3:minute}, ${4:second})"},
  {"trigger":"dif", "contents":"dif(${1:argument})"},
  {"trigger":"digamma", "contents":"digamma(${1:argument})"},
  {"trigger":"dim", "contents":"dim(${1:array-name}, ${2:bound-n})"},
  {"trigger":"dinfo", "contents":"dinfo(${1:directory-id}, ${2:info-item})"},
  {"trigger":"divide", "contents":"divide(${1:x}, ${2:y})"},
  {"trigger":"dnum", "contents":"dnum(${1:directory-id})"},
  {"trigger":"dopen", "contents":"dopen(${1:fileref})"},
  {"trigger":"doptname", "contents":"doptname(${1:directory-id}, ${2:nval})"},
  {"trigger":"doptnum", "contents":"doptnum(${1:directory-id})"},
  {"trigger":"dread", "contents":"dread(${1:directory-id}, ${2:nval})"},
  {"trigger":"dropnote", "contents":"dropnote(${1:data-set-id|file-id}, ${2:note-id})"},
  {"trigger":"dsname", "contents":"dsname(${1:data-set-id})"},
  {"trigger":"dur", "contents":"dur(${1:y}, ${2:f}, ${3:c(1)}, ${4:...}, ${5:c(k)})"},
  {"trigger":"durp", "contents":"durp(${1:A}, ${2:c}, ${3:n}, ${4:K}, ${5:k0)}, ${6:y})"},
  {"trigger":"effrate", "contents":"effrate(${1:compounding-interval}, ${2:rate})"},
  {"trigger":"envlen", "contents":"envlen(${1:argument})"},
  {"trigger":"erf", "contents":"erf(${1:argument})"},
  {"trigger":"erfc", "contents":"erfc(${1:argument})"},
  {"trigger":"euclid", "contents":"euclid(${1:value-1}, ${2:<, value-2 ...>})"},
  {"trigger":"execute", "contents":"call execute(${1:argument})"},
  {"trigger":"exist", "contents":"exist(${1:member-name}, ${2:<, member-type<, generation>>})"},
  {"trigger":"exp", "contents":"exp(${1:argument})"},
  {"trigger":"fact", "contents":"fact(${1:n})"},
  {"trigger":"fappend", "contents":"fappend(${1:file-id}, ${2:<, cc>})"},
  {"trigger":"fclose", "contents":"fclose(${1:file-id})"},
  {"trigger":"fcol", "contents":"fcol(${1:file-id})"},
  {"trigger":"fdelete", "contents":"fdelete(${1:fileref|directory})"},
  {"trigger":"fetch", "contents":"fetch(${1:data-set-id}, ${2:<, 'NOSET'>})"},
  {"trigger":"fetchobs", "contents":"fetchobs(${1:data-set-id}, ${2:obs-number}, ${3:<, options>})"},
  {"trigger":"fexist", "contents":"fexist(${1:fileref})"},
  {"trigger":"fget", "contents":"fget(${1:file-id}, ${2:variable}, ${3:<, length>})"},
  {"trigger":"fileexist", "contents":"fileexist(${1:file-name})"},
  {"trigger":"filename", "contents":"filename(${1:fileref}, ${2:<, file-name>}, ${3:<, device-type>}, ${4:<, 'host-options'>}, ${5:<, dir-ref>})"},
  {"trigger":"fileref", "contents":"fileref(${1:fileref})"},
  {"trigger":"finance", "contents":"finance(${1:string-identifier}, ${2:parm1}, ${3:parm2, ...})"},
  {"trigger":"find", "contents":"find(${1:string}, ${2:substring}, ${3:<, modifiers>}, ${4:<, startpos>})"},
  {"trigger":"findc", "contents":"findc(${1:string}, ${2:substring}, ${3:<, startpos>}, ${4:<, modifiers>})"},
  {"trigger":"findw", "contents":"findw(${1:string}, ${2:word}, ${3:startpos}, ${4:<, chars>}, ${5:<, modifiers>})"},
  {"trigger":"finfo", "contents":"finfo(${1:file-id}, ${2:info-item})"},
  {"trigger":"finv", "contents":"finv(${1:p}, ${2:ndf}, ${3:ddf}, ${4:<, nc>})"},
  {"trigger":"fipname", "contents":"fipname(${1:expression})"},
  {"trigger":"fipnamel", "contents":"fipnamel(${1:expression})"},
  {"trigger":"fipstate", "contents":"fipstate(${1:expression})"},
  {"trigger":"first", "contents":"first(${1:string})"},
  {"trigger":"floor", "contents":"floor(${1:argument})"},
  {"trigger":"floorz", "contents":"floorz(${1:argument})"},
  {"trigger":"fnonct", "contents":"fnonct(${1:x}, ${2:ndf}, ${3:ddf}, ${4:prob})"},
  {"trigger":"fopen", "contents":"fopen(${1:fileref}, ${2:<, open-mode<, record-length<, record-format>>>})"},
  {"trigger":"foptname", "contents":"foptname(${1:file-id}, ${2:nval})"},
  {"trigger":"foptnum", "contents":"foptnum(${1:file-id})"},
  {"trigger":"fpoint", "contents":"fpoint(${1:file-id}, ${2:note-id})"},
  {"trigger":"fpos", "contents":"fpos(${1:file-id}, ${2:nval})"},
  {"trigger":"fput", "contents":"fput(${1:file-id}, ${2:nval})"},
  {"trigger":"fread", "contents":"fread(${1:file-id})"},
  {"trigger":"frewind", "contents":"frewind(${1:file-id})"},
  {"trigger":"frlen", "contents":"frlen(${1:file-id})"},
  {"trigger":"fsep", "contents":"fsep(${1:file-id}, ${2:characters}, ${3:<, 'x'|'X'>})"},
  {"trigger":"fuzz", "contents":"fuzz(${1:argument})"},
  {"trigger":"fwrite", "contents":"fwrite(${1:file-id}, ${2:<, cc>})"},
  {"trigger":"gaminv", "contents":"gaminv(${1:p}, ${2:a})"},
  {"trigger":"gamma", "contents":"gamma(${1:argument})"},
  {"trigger":"garkhclprc", "contents":"garkhclprc(${1:E}, ${2:t}, ${3:F}, ${4:Rd}, ${5:Rf}, ${6:sigma})"},
  {"trigger":"garkhptprc", "contents":"garkhptprc(${1:E}, ${2:t}, ${3:F}, ${4:Rd}, ${5:Rf}, ${6:sigma})"},
  {"trigger":"gcd", "contents":"gcd(${1:x1}, ${2:x2}, ${3:x3}, ${4:<, ..., xn})"},
  {"trigger":"geodist", "contents":"geodist(${1:latitude-1}, ${2:longitude-1}, ${3:latitude-2}, ${4:longitude-2}, ${5:<, options>})"},
  {"trigger":"geomean", "contents":"geomean(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"geomeanz", "contents":"geomeanz(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"getoption", "contents":"getoption(${1:option-name}, ${2:<, return-value-option>}, ${3:<, return-value-formatting-options>})"},
  {"trigger":"getvarc", "contents":"getvarc(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"getvarn", "contents":"getvarn(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"graycode", "contents":"call graycode(${1:k}, ${2:num variable-1}, ${3:...}, ${4:num variable-n})"},
  {"trigger":"graycode2", "contents":"call graycode(${1:k}, ${2:char variable <, n<, in-out>>})"},
  {"trigger":"harmean", "contents":"harmean(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"harmeanz", "contents":"harmeanz(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"hbound", "contents":"hbound(${1:array-name}, ${2:bound-n})"},
  {"trigger":"hms", "contents":"hms(${1:hour}, ${2:minute}, ${3:second})"},
  {"trigger":"holiday", "contents":"holiday(${1:holiday}, ${2:year})"},
  {"trigger":"hour", "contents":"hour(${1:time|datetime})"},
  {"trigger":"htmldecode", "contents":"htmldecode(${1:expression})"},
  {"trigger":"htmlencode", "contents":"htmlencode(${1:expression}, ${<, options>})"},
  {"trigger":"ibessel", "contents":"ibessel(${1:nu}, ${2:x}, ${3:kode})"},
  {"trigger":"ifc", "contents":"ifc(${1:logical-expression}, ${2:value-returned-when-true}, ${3:value-returned-when-false}, ${4:<, value-returned-when-missing>})"},
  {"trigger":"ifn", "contents":"ifn(${1:logical-expression}, ${2:value-returned-when-true}, ${3:value-returned-when-false}, ${4:<, value-returned-when-missing>})"},
  {"trigger":"index", "contents":"index(${1:source}, ${2:excerpt})"},
  {"trigger":"indexc", "contents":"indexc(${1:source}, ${2:excerpt-1}, ${3:<, ..., excerpt-n>})"},
  {"trigger":"indexw", "contents":"indexw(${1:source}, ${2:excerpt}, ${3:<, delimiters>})"},
  {"trigger":"input", "contents":"input(${1:source}, ${2:<?|??>}, ${3:informat.})"},
  {"trigger":"inputc", "contents":"inputc(${1:source}, ${2:informat}, ${3:<, w>})"},
  {"trigger":"inputn", "contents":"inputn(${1:source}, ${2:informat}, ${3:<, w<, d>>})"},
  {"trigger":"int", "contents":"int(${1:argument})"},
  {"trigger":"intcindex", "contents":"intcindex(${1:interval}, ${2:<multiple shift-index>}, ${3:date-time-value})"},
  {"trigger":"intck", "contents":"intck(${1:interval<multiple>}, ${2:<.shift-index>}, ${3:start-date}, ${4:end-date}, ${5:<, 'method'>})"},
  {"trigger":"intcycle", "contents":"intcycle(${1:interval<multiple.<shift-index>>}, ${2:<seasonality>})"},
  {"trigger":"intfit", "contents":"intfit(${1:argument-1}, ${2:argument-2}, ${3:<, type>})"},
  {"trigger":"intfmt", "contents":"intfmt(${1:interval<multiple.<shift-index>>}, ${2:'size'})"},
  {"trigger":"intget", "contents":"intget(${1:date-1}, ${2:date-2}, ${3:date-3})"},
  {"trigger":"intindex", "contents":"intindex(${1:interval<multiple.<shift-index>>}, ${2:date-value}, ${3:<seasonality>})"},
  {"trigger":"intnx", "contents":"intnx(${1:interval<multiple>}, ${2:<.shift-index>}, ${3:start-from}, ${4:increment}, ${5:<, 'alignment'>})"},
  {"trigger":"intrr", "contents":"intrr(${1:freq}, ${2:c0}, ${3:c1}, ${4:..., }, ${5:cn})"},
  {"trigger":"intseas", "contents":"intseas(${1:interval<multiple.<shift-index>>}, ${2:<seasonality>})"},
  {"trigger":"intshift", "contents":"intshift(${1:interval<multiple.<shift-index>>})"},
  {"trigger":"inttest", "contents":"inttest(${1:interval<multiple.<shift-index>>})"},
  {"trigger":"intz", "contents":"intz(${1:argument})"},
  {"trigger":"iorcmsg", "contents":"iorcmsg($0)"},
  {"trigger":"ipmt", "contents":"ipmt(${1:rate}, ${2:period}, ${3:number-of-periods}, ${4:principal-amount}, ${5:future-amount}, ${6:<type>})"},
  {"trigger":"iqr", "contents":"iqr(${1:value1}, ${2:<.value-2>})"},
  {"trigger":"irr", "contents":"irr(${1:freq}, ${2:c0}, ${3:c1}, ${4:..., }, ${5:cn})"},
  {"trigger":"is8601_convert", "contents":"call is8601_convert(${1:convert-from}, ${2:convert-to}, ${3:<from-variables>}, ${4:<to-variables>}, ${5:<date-time-replacements>})"},
  {"trigger":"jbessel", "contents":"jbessel(${1:nu}, ${2:x})"},
  {"trigger":"juldate", "contents":"juldate(${1:date})"},
  {"trigger":"juldate7", "contents":"juldate7(${1:date})"},
  {"trigger":"kurtosis", "contents":"kurtosis(${1:argument-1}, ${2:argument-2}, ${3:argument-3}, ${4:argument-4}, ${5:<..., 'argument-n'>})"},
  {"trigger":"label", "contents":"call label(${1:variable-1}, ${2:variable-2})"},
  {"trigger":"lag", "contents":"lag(${1:argument})"},
  {"trigger":"largest", "contents":"largest(${1:k}, ${2:value-1}, ${3:<, value-2...>})"},
  {"trigger":"lbound", "contents":"lbound(${1:array-name}, ${2:bound-n})"},
  {"trigger":"lcm", "contents":"lcm(${1:x1}, ${2:x2}, ${3:x3}, ${4:..., }, ${5:xn})"},
  {"trigger":"lcomb", "contents":"lcomb(${1:n}, ${2:r})"},
  {"trigger":"left", "contents":"left(${1:argument})"},
  {"trigger":"length", "contents":"length(${1:string})"},
  {"trigger":"lengthc", "contents":"lengthc(${1:string})"},
  {"trigger":"lengthm", "contents":"lengthm(${1:string})"},
  {"trigger":"lengthn", "contents":"lengthn(${1:string})"},
  {"trigger":"lexcomb", "contents":"call lexcomb(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${n:variable-n})"},
  {"trigger":"lexcomb2", "contents":"lexcomb(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${5:variable-n})"},
  {"trigger":"lexcombi", "contents":"call lexcombi(${1:n}, ${2:k}, ${3:index-1}, ${4:...}, ${k:index-k})"},
  {"trigger":"lexcombi2", "contents":"lexcombi(${1:n}, ${2:k}, ${3:index-1}, ${4:...}, ${5:k})"},
  {"trigger":"lexperk", "contents":"call lexperk(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${n:variable-n})"},
  {"trigger":"lexperk2", "contents":"lexperk(${1:count}, ${2:k}, ${3:variable-1}, ${4:...}, ${5:variable-n})"},
  {"trigger":"lexperm", "contents":"call lexperm(${1:count}, ${2:variable-1}, ${3:<, variable-N ...>})"},
  {"trigger":"lexperm2", "contents":"lexperm(${1:count}, ${2:variable-1}, ${3:...}, ${5:variable-n})"},
  {"trigger":"lfact", "contents":"lfact(${1:n})"},
  {"trigger":"lgamma", "contents":"lgamma(${1:argument})"},
  {"trigger":"libname", "contents":"libname(${1:libref}, ${2:<, sas-library<, engine<, options>>>})"},
  {"trigger":"libref", "contents":"libref(${1:libref})"},
  {"trigger":"log", "contents":"log(${1:argument})"},
  {"trigger":"log10", "contents":"log10(${1:argument})"},
  {"trigger":"log1px", "contents":"log1px(${1:x})"},
  {"trigger":"log2", "contents":"log2(${1:argument})"},
  {"trigger":"logbeta", "contents":"logbeta(${1:a}, ${2:b})"},
  {"trigger":"logcdf", "contents":"logcdf(${1:dist}, ${2:quantile}, ${3:<, parm-1..., parm-k>})"},
  {"trigger":"logistic", "contents":"call logistic(${1:num argument}, ${2:<, num argument, ...>})"},
  {"trigger":"logpdf", "contents":"logpdf(${1:dist}, ${2:quantile}, ${3:<, parm-1..., parm-k>})"},
  {"trigger":"logsdf", "contents":"logsdf(${1:dist}, ${2:quantile}, ${3:<, parm-1..., parm-k>})"},
  {"trigger":"lowcase", "contents":"lowcase(${1:argument})"},
  {"trigger":"lperm", "contents":"lperm(${1:n}, ${2:<, r>})"},
  {"trigger":"lpnorm", "contents":"lpnorm(${1:p}, ${2:value-1}, ${3:<, value-2...>})"},
  {"trigger":"mad", "contents":"mad(${1:value-1}, ${2:<, value-2>})"},
  {"trigger":"margrclprc", "contents":"margrclprc(${1:X1}, ${2:t}, ${3:X2}, ${4:sigma1}, ${5:sigma2}, ${6:rho12})"},
  {"trigger":"margrptprc", "contents":"margrptprc(${1:X1}, ${2:t}, ${3:X2}, ${4:sigma1}, ${5:sigma2}, ${6:rho12})"},
  {"trigger":"max", "contents":"max(${1:argument-1}, ${2:argument-2}, ${3:<..., argument-n>})"},
  {"trigger":"md5", "contents":"md5(${1:string})"},
  {"trigger":"mdy", "contents":"mdy(${1:month}, ${2:day}, ${3:year})"},
  {"trigger":"mean", "contents":"mean(${1:argument-1}, ${2:<..., argument-n>})"},
  {"trigger":"median", "contents":"median(${1:value-1}, ${2:<, value2, ...>})"},
  {"trigger":"min", "contents":"min(${1:argument-1}, ${2:argument-2}, ${3:<..., argument-n>})"},
  {"trigger":"minute", "contents":"minute(${1:time|datetime})"},
  {"trigger":"missing", "contents":"call missing(${1:varname1}, ${2:<, varname2, ...>})"},
  {"trigger":"missing2", "contents":"missing(${1:numeric-expression|character-expression})"},
  {"trigger":"mod", "contents":"mod(${1:argument-1}, ${2:argument-2})"},
  {"trigger":"modexist", "contents":"modexist(${1:'product-name'})"},
  {"trigger":"module", "contents":"call module(${1:<cntl-string, >}, ${2:module-name, ${3:<, argument-1, ..., argument-n>})"},
  {"trigger":"modulec", "contents":"modulec(${1:<cntl-string, >}, ${2:module-name}, ${3:<, argument-1, ..., argument-n>})"},
  {"trigger":"modulen", "contents":"modulen(${1:<cntl-string, >}, ${2:module-name}, ${3:<, argument-1, ..., argument-n>})"},
  {"trigger":"modz", "contents":"modz(${1:argument-1}, ${2:argument-2})"},
  {"trigger":"month", "contents":"month(${1:date})"},
  {"trigger":"mopen", "contents":"mopen(${1:directory-id}, ${2:member-name}, ${3:<, open-mode<, record-length<, record-format >>>})"},
  {"trigger":"mort", "contents":"mort(${1:a}, ${2:p}, ${3:r}, ${4:n})"},
  {"trigger":"msplint", "contents":"msplint(${1:X}, ${2:n}, ${3:X1}, ${4:<, X2, .., Xn>}, ${5:<, Y2, .., Yn>}, ${6:<D1, Dn>})"},
  {"trigger":"mvalid", "contents":"mvalid(${1:libname}, ${2:string}, ${3:memtype}, ${4:<, validmemname>})"},
  {"trigger":"n", "contents":"n(${1:argument-1}, ${2:<, ...argument-n>})"},
  {"trigger":"netpv", "contents":"netpv(${1:r}, ${2:freq}, ${3:c0}, ${4:c1, .., cn})"},
  {"trigger":"nliteral", "contents":"nliteral(${1:string})"},
  {"trigger":"nmiss", "contents":"nmiss(${1:argument-1}, ${2:<, ...argument-n>})"},
  {"trigger":"nomrate", "contents":"nomrate(${1:compounding-interval}, ${2:rate})"},
  {"trigger":"normal", "contents":"normal(${1:seed})"},
  {"trigger":"notalnum", "contents":"notalnum(${1:string}, ${2:<, start>})"},
  {"trigger":"notalpha", "contents":"notalpha(${1:string}, ${2:<, start>})"},
  {"trigger":"notcntrl", "contents":"notcntrl(${1:string}, ${2:<, start>})"},
  {"trigger":"notdigit", "contents":"notdigit(${1:string}, ${2:<, start>})"},
  {"trigger":"note", "contents":"note(${1:data-set-id})"},
  {"trigger":"notfirst", "contents":"notfirst(${1:string}, ${2:<, start>})"},
  {"trigger":"notgraph", "contents":"notgraph(${1:string}, ${2:<, start>})"},
  {"trigger":"notlower", "contents":"notlower(${1:string}, ${2:<, start>})"},
  {"trigger":"notname", "contents":"notname(${1:string}, ${2:<, start>})"},
  {"trigger":"notprint", "contents":"notprint(${1:string}, ${2:<, start>})"},
  {"trigger":"notpunct", "contents":"notpunct(${1:string}, ${2:<, start>})"},
  {"trigger":"notspace", "contents":"notspace(${1:string}, ${2:<, start>})"},
  {"trigger":"notupper", "contents":"notupper(${1:string}, ${2:<, start>})"},
  {"trigger":"notxdigit", "contents":"notxdigit(${1:string}, ${2:<, start>})"},
  {"trigger":"npv", "contents":"npv(${1:r}, ${2:freq}, ${3:c0}, ${4:c1, .., cn})"},
  {"trigger":"nvalid", "contents":"nvalid(${1:string}, ${2:<, validvarname>})"},
  {"trigger":"nwkdom", "contents":"nwkdom(${1:n}, ${2:weekday}, ${3:month}, ${4:year})"},
  {"trigger":"open", "contents":"open(${1:<data-set-name mode generation-number type >})"},
  {"trigger":"ordinal", "contents":"ordinal(${1:k}, ${2:argument-1}, ${3:argument-2}, ${4:<, ...argument-n>})"},
  {"trigger":"pathname", "contents":"pathname(${1:fileref|libref}, ${2:<, search-ref>})"},
  {"trigger":"pctl", "contents":"pctl(${1:percentage}, ${2:value1}, ${3:<, value2, ...>})"},
  {"trigger":"pdf", "contents":"pdf(${1:dist}, ${2:quantile}, ${3:<, parm-1, ...parm-k>})"},
  {"trigger":"peek", "contents":"peek(${1:address}, ${2:<, length>})"},
  {"trigger":"peekc", "contents":"peekc(${1:address}, ${2:<, length>})"},
  {"trigger":"peekclong", "contents":"peekclong(${1:address}, ${2:<, length>})"},
  {"trigger":"peeklong", "contents":"peeklong(${1:address}, ${2:<, length>})"},
  {"trigger":"perm", "contents":"perm(${1:n}, ${2:<, r>})"},
  {"trigger":"pmt", "contents":"pmt(${1:rate}, ${2:period}, ${3:number-of-periods}, ${4:principal-amount}, ${5:future-amount}, ${6:<type>})"},
  {"trigger":"point", "contents":"point(${1:data-set-id}, ${2:note-id})"},
  {"trigger":"poisson", "contents":"poisson(${1:m}, ${2:n})"},
  {"trigger":"poke", "contents":"call poke(${1:source}, ${2:pointer}, ${3:<, length>}, ${4:<, floating-point>})"},
  {"trigger":"pokelong", "contents":"call pokelong(${1:source}, ${2:pointer}, ${3:<, length>}, ${4:<, floating-point>})"},
  {"trigger":"ppmt", "contents":"ppmt(${1:rate}, ${2:period}, ${3:number-of-periods}, ${4:principal-amount}, ${5:future-amount}, ${6:<type>})"},
  {"trigger":"probbeta", "contents":"probbeta(${1:x}, ${2:a}, ${3:b})"},
  {"trigger":"probbnml", "contents":"probbnml(${1:p}, ${2:n}, ${3:m})"},
  {"trigger":"probbnrm", "contents":"probbnrm(${1:x}, ${2:y}, ${3:r})"},
  {"trigger":"probchi", "contents":"probchi(${1:x}, ${2:df}, ${3:<, nc>})"},
  {"trigger":"probf", "contents":"probf(${1:x}, ${2:ndf}, ${3:ddf}, ${4:<, nc>})"},
  {"trigger":"probgam", "contents":"probgam(${1:x}, ${2:a})"},
  {"trigger":"probhypr", "contents":"probhypr(${1:N}, ${2:K}, ${3:n}, ${4:x}, ${5:<, r>})"},
  {"trigger":"probit", "contents":"probit(${1:p})"},
  {"trigger":"probmc", "contents":"probmc(${1:distribution}, ${2:q}, ${3:prob}, ${4:df}, ${5:nparms}, ${6:<, parameters>})"},
  {"trigger":"probnegb", "contents":"probnegb(${1:p}, ${2:n}, ${3:m})"},
  {"trigger":"probnorm", "contents":"probnorm(${1:x})"},
  {"trigger":"probt", "contents":"probt(${1:x}, ${2:df}, ${3:<, nc>})"},
  {"trigger":"propcase", "contents":"propcase(${1:argument}, ${2:<, delimiters>})"},
  {"trigger":"prxchange2", "contents":"call prxchange(${1:regular-expression-id }, ${2:times}, ${3:old-string}, ${4:<, new-string<, result-length<, truncation-value<, number-of-changes>>>>})"},
  {"trigger":"prxchange", "contents":"prxchange(${1:perl-regular-expression}, ${2:regular-expression-id}, ${3:times}, ${4:source})"},
  {"trigger":"prxdebug", "contents":"call prxdebug(${1:on-off})"},
  {"trigger":"prxfree", "contents":"call prxfree(${1:regular-expression-id})"},
  {"trigger":"prxmatch", "contents":"prxmatch(${1:regular-expression-id|perl-regular-expression}, ${2:source})"},
  {"trigger":"prxnext", "contents":"call prxnext(${1:regular-expression-id}, ${2:start}, ${3:stop}, ${4:source}, ${5:position}, ${6:length})"},
  {"trigger":"prxparen", "contents":"prxparen(${1:regular-expression-id })"},
  {"trigger":"prxparse", "contents":"prxparse(${1:perl-regular-expression})"},
  {"trigger":"prxposn2", "contents":"call prxposn(${1:regular-expression-id}, ${2:capture-buffer}, ${3:start}, ${6:<, length>})"},
  {"trigger":"prxposn", "contents":"prxposn(${1:regular-expression-id}, ${2:capture-buffer}, ${3:source})"},
  {"trigger":"prxsubstr", "contents":"call prxsubstr(${1:regular-expression-id}, ${2:source}, ${3:position}, ${4:<, length>})"},
  {"trigger":"ptrlongadd", "contents":"ptrlongadd(${1:pointer}, ${2:<, amount>})"},
  {"trigger":"put", "contents":"put(${1:source}, ${2:format.})"},
  {"trigger":"putc", "contents":"putc(${1:source}, ${2:format}, ${3:<, w>})"},
  {"trigger":"putn", "contents":"putn(${1:source}, ${2:format}, ${3:<, w<, d>>})"},
  {"trigger":"pvp", "contents":"pvp(${1:A}, ${2:c}, ${3:n}, ${4:K}, ${5:k0)}, ${6:y})"},
  {"trigger":"qtr", "contents":"qtr(${1:date})"},
  {"trigger":"quantile", "contents":"quantile(${1:dist}, ${2:probability}, ${3:parm-1}, ${4:<, ..., parm-k>})"},
  {"trigger":"quote", "contents":"quote(${1:argument})"},
  {"trigger":"ranbin2", "contents":"call ranbin(${1:seed}, ${2:n}, ${3:p}, ${4:x})"},
  {"trigger":"ranbin", "contents":"ranbin(${1:seed}, ${2:n}, ${3:p})"},
  {"trigger":"rancau2", "contents":"call rancau(${1:seed}, ${2:x})"},
  {"trigger":"rancau", "contents":"rancau(${1:seed})"},
  {"trigger":"rancomb", "contents":"call rancomb(${1:seed}, ${2:k}, ${3:variable-1}, ${4:<, variable-2, ...>})"},
  {"trigger":"rand", "contents":"rand(${1:dist}, ${2:parm-1}, ${3:<, ..., parm-k>})"},
  {"trigger":"ranexp2", "contents":"call ranexp(${1:seed}, ${2:x})"},
  {"trigger":"ranexp", "contents":"ranexp(${1:seed})"},
  {"trigger":"rangam2", "contents":"call rangam(${1:seed}, ${2:a}, ${3:x})"},
  {"trigger":"rangam", "contents":"rangam(${1:seed}, ${2:a})"},
  {"trigger":"range", "contents":"range(${1:argument-1}, ${2:<, ...argument-n>})"},
  {"trigger":"rank", "contents":"rank(${1:x})"},
  {"trigger":"rannor2", "contents":"call rannor(${1:seed}, ${2:x})"},
  {"trigger":"rannor", "contents":"rannor(${1:seed})"},
  {"trigger":"ranperk", "contents":"call ranperk(${1:seed}, ${2:k}, ${3:variable-1}, ${4:<, variable-2, ...>})"},
  {"trigger":"ranperm", "contents":"call ranperm(${1:seed}, ${2:variable-1}, ${3:<, variable-2, ...>})"},
  {"trigger":"ranpoi2", "contents":"call ranpoi(${1:seed}, ${2:m}, ${3:x})"},
  {"trigger":"ranpoi", "contents":"ranpoi(${1:seed}, ${2:m})"},
  {"trigger":"rantbl2", "contents":"call rantbl(${1:seed}, ${2:p1}, ${3:<, pi, ..pn>}, ${4:x})"},
  {"trigger":"rantbl", "contents":"rantbl(${1:seed}, ${2:<p1, ..pi, ..pn>})"},
  {"trigger":"rantri2", "contents":"call rantri(${1:seed}, ${2:h}, ${3:x})"},
  {"trigger":"rantri", "contents":"rantri(${1:seed}, ${2:h})"},
  {"trigger":"ranuni2", "contents":"call ranuni(${1:seed}, ${2:x})"},
  {"trigger":"ranuni", "contents":"ranuni(${1:seed})"},
  {"trigger":"rename", "contents":"rename(${1:old-name}, ${2:new-name}, ${3:<, type<, description<, password<, generation>>>>})"},
  {"trigger":"repeat", "contents":"repeat(${1:argument}, ${2:n})"},
  {"trigger":"resolve", "contents":"resolve(${1:argument})"},
  {"trigger":"reverse", "contents":"reverse(${1:argument})"},
  {"trigger":"rewind", "contents":"rewind(${1:data-set-id})"},
  {"trigger":"right", "contents":"right(${1:argument})"},
  {"trigger":"rms", "contents":"rms(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"round", "contents":"round(${1:argument}, ${2:<, rounding-unit>})"},
  {"trigger":"rounde", "contents":"rounde(${1:argument}, ${2:<, rounding-unit>})"},
  {"trigger":"roundz", "contents":"roundz(${1:argument}, ${2:<, rounding-unit>})"},
  {"trigger":"saving", "contents":"saving(${1:f}, ${2:p}, ${3:r}, ${4:n})"},
  {"trigger":"savings", "contents":"savings(${1:base-date}, ${2:initial-deposit-date}, ${3:deposit-amount}, ${4:deposit-number}, ${5:deposit-interval}, ${6:compounding-interval}, ${7:date-1}, ${8:rate-1}, ${9:<, date-2, rate-2, ...>})"},
  {"trigger":"scan2", "contents":"call scan(${1:<string>}, ${2:count}, ${3:position}, ${4:length}, ${5:<, <charlist><, <modifier(s)>>>})"},
  {"trigger":"scan", "contents":"scan(${1:string}, ${2:count}, ${3:<, charlist modifiers>>})"},
  {"trigger":"sdf", "contents":"sdf(${1:distribution}, ${2:quantile}, ${3:<, parm-1.., parm-k>})"},
  {"trigger":"second", "contents":"second(${1:time|datetime})"},
  {"trigger":"set", "contents":"call set(${1:data-set-id})"},
  {"trigger":"sign", "contents":"sign(${1:argument})"},
  {"trigger":"sin", "contents":"sin(${1:argument})"},
  {"trigger":"sinh", "contents":"sinh(${1:argument})"},
  {"trigger":"skewness", "contents":"skewness(${1:argument-1}, ${2:argument-2}, ${3:argument-3}, ${4:<, ...argument-n>})"},
  {"trigger":"sleep2", "contents":"call sleep(${1:n}, ${2:<, unit>})"},
  {"trigger":"sleep", "contents":"sleep(${1:n}, ${2:<, unit>})"},
  {"trigger":"smallest", "contents":"smallest(${1:k}, ${2:value-1}, ${3:<, value-2, ...>})"},
  {"trigger":"soapweb", "contents":"soapweb(${1:in}, ${2:url}, ${3:<, options>})"},
  {"trigger":"soapwebmeta", "contents":"soapwebmeta(${1:in}, ${2:url}, ${3:<, options>})"},
  {"trigger":"soapwipservice", "contents":"soapwipservice(${1:in}, ${2:service}, ${3:<, options>})"},
  {"trigger":"soapwipsrs", "contents":"soapwipsrs(${1:in}, ${2:url}, ${3:srsurl}, ${4:<, options>})"},
  {"trigger":"soapws", "contents":"soapws(${1:in}, ${2:url}, ${3:<, options>})"},
  {"trigger":"soapwsmeta", "contents":"soapwsmeta(${1:in}, ${2:url}, ${3:<, options>})"},
  {"trigger":"softmax", "contents":"call softmax(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"sortc", "contents":"call sortc(${1:variable-1}, ${2:<, variable-n, ...>})"},
  {"trigger":"sortn", "contents":"call sortn(${1:variable-1}, ${2:<, variable-n, ...>})"},
  {"trigger":"soundex", "contents":"soundex(${1:argument})"},
  {"trigger":"spedis", "contents":"spedis(${1:query}, ${2:keyword})"},
  {"trigger":"sqrt", "contents":"sqrt(${1:argument})"},
  {"trigger":"squantile", "contents":"squantile(${1:dist}, ${2:probability}, ${3:parm-1}, ${4:<, ..., parm-k>})"},
  {"trigger":"std", "contents":"std(${1:argument-1}, ${2:argument-2}, ${3:<..., argument-n>})"},
  {"trigger":"stderr", "contents":"stderr(${1:argument-1}, ${2:argument-2}, ${3:<..., argument-n>})"},
  {"trigger":"stdize", "contents":"call stdize(${1:<option-1, option-2, .., >}, ${2:variable-1}, ${3:<, variable-2, ...>})"},
  {"trigger":"stfips", "contents":"stfips(${1:postal-code})"},
  {"trigger":"stname", "contents":"stname(${1:postal-code})"},
  {"trigger":"stnamel", "contents":"stnamel(${1:postal-code})"},
  {"trigger":"streaminit", "contents":"call streaminit(${1:seed})"},
  {"trigger":"strip", "contents":"strip(${1:string})"},
  {"trigger":"subpad", "contents":"subpad(${1:string}, ${2:position}, ${3:<, length>})"},
  {"trigger":"substr", "contents":"substr(${1:string}, ${2:position}, ${3:<, length>})"},
  {"trigger":"substrn", "contents":"substrn(${1:string}, ${2:position}, ${3:<, length>})"},
  {"trigger":"sum", "contents":"sum(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"sumabs", "contents":"sumabs(${1:value-1}, ${2:<, value-2, ...>})"},
  {"trigger":"symexist", "contents":"symexist(${1:argument})"},
  {"trigger":"symget", "contents":"symget(${1:argument})"},
  {"trigger":"symglobl", "contents":"symglobl(${1:argument})"},
  {"trigger":"symlocal", "contents":"symlocal(${1:argument})"},
  {"trigger":"symput", "contents":"call symput(${1:macro-variable}, ${2:value})"},
  {"trigger":"symputx", "contents":"call symputx(${1:macro-variable}, ${2:value}, ${3:<, symbol-table>})"},
  {"trigger":"sysexist", "contents":"sysexist(${1:argument})"},
  {"trigger":"sysget", "contents":"sysget(${1:operating-environment-variable})"},
  {"trigger":"sysmsg", "contents":"sysmsg($0)"},
  {"trigger":"sysparm", "contents":"sysparm($0)"},
  {"trigger":"sysprocessid", "contents":"sysprocessid($0)"},
  {"trigger":"sysprocessname", "contents":"sysprocessname(${1:<process_id>})"},
  {"trigger":"sysprod", "contents":"sysprod(${1:product-name})"},
  {"trigger":"sysrc", "contents":"sysrc($0)"},
  {"trigger":"system2", "contents":"call system(${1:command})"},
  {"trigger":"system", "contents":"system(${1:command})"},
  {"trigger":"tan", "contents":"tan(${1:argument})"},
  {"trigger":"tanh2", "contents":"call tanh(${1:argument}, ${2:<, argument, ...>})"},
  {"trigger":"tanh", "contents":"tanh(${1:argument})"},
  {"trigger":"time", "contents":"time($0)"},
  {"trigger":"timepart", "contents":"timepart(${1:datetime})"},
  {"trigger":"timevalue", "contents":"timevalue(${1:base-date}, ${2:reference-date}, ${3:reference-amount}, ${4:compounding-interval}, ${5:date-1}, ${6:rate-1}, ${7:<, date-2, rate-2, ...>})"},
  {"trigger":"tinv", "contents":"tinv(${1:p}, ${2:df}, ${3:<, nc>})"},
  {"trigger":"tnonct", "contents":"tnonct(${1:x}, ${2:df}, ${3:prob})"},
  {"trigger":"today", "contents":"today($0)"},
  {"trigger":"translate", "contents":"translate(${1:source}, ${2:to-1}, ${3:from-1}, ${4:<, ..., to-n, from-n>})"},
  {"trigger":"transtrn", "contents":"transtrn(${1:source}, ${2:target}, ${3:replacement})"},
  {"trigger":"tranwrd", "contents":"tranwrd(${1:source}, ${2:target}, ${3:replacement})"},
  {"trigger":"trigamma", "contents":"trigamma(${1:argument})"},
  {"trigger":"trim", "contents":"trim(${1:argument})"},
  {"trigger":"trimn", "contents":"trimn(${1:argument})"},
  {"trigger":"trunc", "contents":"trunc(${1:number}, ${2:length})"},
  {"trigger":"uniform", "contents":"uniform(${1:seed})"},
  {"trigger":"upcase", "contents":"upcase(${1:argument})"},
  {"trigger":"urldecode", "contents":"urldecode(${1:argument})"},
  {"trigger":"urlencode", "contents":"urlencode(${1:argument})"},
  {"trigger":"uss", "contents":"uss(${1:argument-1}, ${2:<, ...argument-n>})"},
  {"trigger":"uuidgen", "contents":"uuidgen(${1:<max-warnings<, binary-result>>})"},
  {"trigger":"var", "contents":"var(${1:argument-1}, ${2:argument-2}, ${3:<, ...argument-n>})"},
  {"trigger":"varfmt", "contents":"varfmt(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varinfmt", "contents":"varinfmt(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varlabel", "contents":"varlabel(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varlen", "contents":"varlen(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varname", "contents":"varname(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varnum", "contents":"varnum(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"varray", "contents":"varray(${1:name})"},
  {"trigger":"varrayx", "contents":"varrayx(${1:expression})"},
  {"trigger":"vartype", "contents":"vartype(${1:data-set-id}, ${2:var-num})"},
  {"trigger":"verify", "contents":"verify(${1:source}, ${2:excerpt-1}, ${3:<, ...excerpt-n>})"},
  {"trigger":"vformat", "contents":"vformat(${1:var})"},
  {"trigger":"vformatd", "contents":"vformatd(${1:var})"},
  {"trigger":"vformatdx", "contents":"vformatdx(${1:expression})"},
  {"trigger":"vformatn", "contents":"vformatn(${1:var})"},
  {"trigger":"vformatnx", "contents":"vformatnx(${1:expression})"},
  {"trigger":"vformatw", "contents":"vformatw(${1:var})"},
  {"trigger":"vformatwx", "contents":"vformatwx(${1:expression})"},
  {"trigger":"vformatx", "contents":"vformatx(${1:expression})"},
  {"trigger":"vinarray", "contents":"vinarray(${1:var})"},
  {"trigger":"vinarrayx", "contents":"vinarrayx(${1:expression})"},
  {"trigger":"vinformat", "contents":"vinformat(${1:var})"},
  {"trigger":"vinformatd", "contents":"vinformatd(${1:var})"},
  {"trigger":"vinformatdx", "contents":"vinformatdx(${1:expression})"},
  {"trigger":"vinformatn", "contents":"vinformatn(${1:var})"},
  {"trigger":"vinformatnx", "contents":"vinformatnx(${1:expression})"},
  {"trigger":"vinformatw", "contents":"vinformatw(${1:var})"},
  {"trigger":"vinformatwx", "contents":"vinformatwx(${1:expression})"},
  {"trigger":"vinformatx", "contents":"vinformatx(${1:expression})"},
  {"trigger":"vlabel", "contents":"vlabel(${1:var})"},
  {"trigger":"vlabelx", "contents":"vlabelx(${1:expression})"},
  {"trigger":"vlength", "contents":"vlength(${1:var})"},
  {"trigger":"vlengthx", "contents":"vlengthx(${1:expression})"},
  {"trigger":"vname2", "contents":"call vname(${1:variable-1}, ${2:variable-2})"},
  {"trigger":"vname", "contents":"vname(${1:var})"},
  {"trigger":"vnamex", "contents":"vnamex(${1:expression})"},
  {"trigger":"vnext", "contents":"call vnext(${1:varname}, ${2:<, vartype}, ${3:<, varlength})"},
  {"trigger":"vtype", "contents":"vtype(${1:var})"},
  {"trigger":"vtypex", "contents":"vtypex(${1:expression})"},
  {"trigger":"vvalue", "contents":"vvalue(${1:var})"},
  {"trigger":"vvaluex", "contents":"vvaluex(${1:expression})"},
  {"trigger":"week", "contents":"week(${1:<sas-date>}, ${2:<'descriptor'>})"},
  {"trigger":"weekday", "contents":"weekday(${1:date})"},
  {"trigger":"whichc", "contents":"whichc(${1:string}, ${2:value-1}, ${3:<, value-2, ...>})"},
  {"trigger":"whichn", "contents":"whichn(${1:string}, ${2:value-1}, ${3:<, alue-2, ...>})"},
  {"trigger":"year", "contents":"year(${1:date})"},
  {"trigger":"yieldp", "contents":"yieldp(${1:A}, ${2:c}, ${3:n}, ${4:K}, ${5:k0)}, ${6:p})"},
  {"trigger":"yrdif", "contents":"yrdif(${1:start-date}, ${2:end-date}, ${3:<, basis>})"},
  {"trigger":"yyq", "contents":"yyq(${1:year}, ${2:quarter})"},
  {"trigger":"zipcity", "contents":"zipcity(${1:zip-code})"},
  {"trigger":"zipcitydistance", "contents":"zipcitydistance(${1:zip-code-1}, ${2:zip-code-2})"},
  {"trigger":"zipfips", "contents":"zipfips(${1:zip-code})"},
  {"trigger":"zipname", "contents":"zipname(${1:zip-code})"},
  {"trigger":"zipnamel", "contents":"zipnamel(${1:zip-code})"},
  {"trigger":"zipstate", "contents":"zipstate(${1:zip-code})"}

  ]
}